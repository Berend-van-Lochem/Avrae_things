embed <drac2>

# Variables
ch = character()
c = combat()
com = c and c.me
args = argparse(&ARGS&)
i = '-i' in &ARGS&
dc = ch.spellbook.dc
adv = [None, True, False][args.adv()]
targs = args.get('t')
cc = "Channel Divinity"
sub = load_json(get('subclass','{"PaladinLevel":"Crown"}')).get("PaladinLevel","").lower()
lvl = int(get("PaladinLevel",0))
how = ["not",True,False][args.adv(custom={"adv":"pass","dis":"fail"})]

# Pronouns
their = get('their','their')

# Requirments
v = (lvl > 2 and sub == 'crown') or i

# Setting up the return
base = f''' -thumb {image} -color {color}'''

# Checking the requiremtns, For the alias to work in combat we need targets I check them both at the same time.
if v and targs and com:
  # Checking if the counter still has uses.
  if ch.cc_exists(cc) and not i:
    if not ch.get_cc(cc):
      return base + f''' -title "{name} has no uses of {cc} remaining!" -f "{cc}|{ch.cc_str(cc)}" '''
   # Adding the DC.
  base += f''' -f "Meta|**DC**: {dc}"'''
  # Looping over all the targets to have them make a save.
  for t in targs:
    # finding the target specific arguments
    t = t.split('|')
    # Getting the name of the target
    targ = t[0]
    # Parsing the arguments of the target
    targargs = argparse(t)
    # Checking if there is adv giving for all targets.
    if not adv:
      adv1 = [None,True,False][targargs.adv()]
     # Checking if pass/fail was given for all targets.
    if how == "not":
      how1 = ["not",True,False][targargs.adv(custom={"adv":"pass","dis":"fail"})]
    # Making the target a SimpleCombatant
    targ = c.get_combatant(targ)
    # Making sure adv1 and how1 are definded, this is done to prevent changing the adc and how for all the next combatants.
    if not how1:
      how1 = how
    if not adv1:
      adv1 = adv
    # Checking if the targets auto fails/succeeds.
    if how1 == "not":
      save = targ.save('wis',adv1)
      saved = save.total >= dc
    elif how1:
      save = "Automatic succes"
      saved = True
    else:
      save = "Automatic Failure!"
      saved = False
    # If the target failed adding the effect and field.
    if not saved:
      targ.add_effect("Champion's Challenge",'',desc=f"Can't willingly move away from {name}.\n- The effect ends if {targ.name} is further then 30 feet from {name}, if {name} is incapaciteted.")
      base += f''' -f "{targ.name}|**WIS save: ** {save} {'Failure!' if how1 else ''}\n**Effect**: Champion's Challenge \n - The target can not willingly move more then 30 feet away from {name}." '''
    # Or not.
    else:
      base += f''' -f "{targ.name}|**WIS save: ** {save} {'Success!' if not how1 else ''}" '''
  base += f''' -title "{name} uses {their} {cc}!" -desc " As a bonus action, you issue a challenge that compels other creatures to do battle with you. Each creature of your choice that you can see within 30 feet of you must make a Wisdom saving throw. On a failed save, a creature can't willingly move more than 30 feet away from you. This effect ends on the creature if you are incapacitated or die or if the creature is more than 30 feet away from you." '''
  # Using the counters as needed and adding the cc_str. returning once done.
  if not i:
    ch.mod_cc(cc,-1)
    return base + f''' -f "{cc}|{ch.cc_str(cc)} (-1)"'''
  if ch.cc_exists(cc):
    base += f''' -f "{cc}|{ch.cc_str(cc)}"'''
  return base
# If there are no targets we just need to check for changing the mod and then returning as needed.
if v:
  # Checking if the counter still has uses.
  if ch.cc_exists(cc) and not i:
    if not ch.get_cc(cc):
      return base + f''' -title "{name} has no uses of {cc} remaining!" -f "{cc}|{ch.cc_str(cc)}" '''
  if not i:
    ch.mod_cc(cc,-1)
    base += f''' -f "{cc}|{ch.cc_str(cc)} (-1)"'''
  if ch.cc_exists(cc):
    base += f''' -f "{cc}|{ch.cc_str(cc)}"'''
  return base + f''' -title "{name} uses {their} {cc}" -desc " As a bonus action, you issue a challenge that compels other creatures to do battle with you. Each creature of your choice that you can see within 30 feet of you must make a Wisdom saving throw. On a failed save, a creature can't willingly move more than 30 feet away from you. This effect ends on the creature if you are incapacitated or die or if the creature is more than 30 feet away from you."'''

# The other options if you can't use the ability.
if lvl == 0:
  base += f''' -title "{name} is not a paladin!" -desc "Why are you even trying to channel the divine power from the paladins?" '''
elif not sub == 'glory':
  base += f''' -title "{name} did not swear the oath Glory." '''
else:
   base += f''' -title "{name} is not yet a level 15 paladin." '''

# Returning as needed.
return base
</drac2>
